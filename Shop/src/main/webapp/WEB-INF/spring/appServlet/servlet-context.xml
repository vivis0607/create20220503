<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 어노테이션 사용으로 객체를 생성할 수 있게 하는 설정 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- resource의 경로 지정 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 타일즈 설정 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	    <beans:property name="definitions">
	        <beans:list>
	            <beans:value>classpath:tiles-config.xml</beans:value>
	        </beans:list>
	    </beans:property>
	</beans:bean>
	
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <beans:property name="order" value="1" />
    </beans:bean>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.shop.controller" />
	
	<context:component-scan base-package="com.kh.shop.interceptor"/>
	<!-- <beans:bean id="testInterceptor" class="com.kh.shop.interceptor.TestInterceptor"></beans:bean>
	<beans:bean id="loginInterceptor" class="com.kh.shop.interceptor.LoginInterceptor"></beans:bean> -->
	
	<!-- 인터셉터 설정 -->
	<interceptors>
		<interceptor>
			<!-- 인터셉터가 실행되는 메소드를 지정 -->
			<!-- <mapping path="/test/test1"/>
			<mapping path="/test/test2"/>
			<mapping path="/test/test3"/>
			<mapping path="/test/test4"/>
			<mapping path="/test/test5"/> -->

			<mapping path="/test/*"/>
			<exclude-mapping path="/test/test3"/>
			<!-- testInterceptor 객체를 참조하겠다 -->
			<!-- testInterceptor 인터셉터를 사용하겠다 -->
			<beans:ref bean="testInterceptor"/>
		</interceptor>
		
		<interceptor>
			<mapping path="/cart/cartList"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
		
		<interceptor>
			<mapping path="/admin/itemManage"/>
			<mapping path="/admin/buyManage"/>
			<mapping path="/admin/memberList"/>
			<mapping path="/admin/regItem"/>
			<mapping path="/admin/categoryManage"/>
			<beans:ref bean="menuInterceptor"/>
		</interceptor>
	</interceptors>
	
</beans:beans>









